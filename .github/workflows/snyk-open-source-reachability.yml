name: Snyk Reachability Test

on:
  push:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  snyk-os-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          SNYK_API: https://api.snyk.io
        run: snyk auth "$SNYK_TOKEN"

      - name: Generate SBOM (CycloneDX JSON)
        env:
          SNYK_API: https://api.snyk.io
        run: |
          snyk sbom --org=bb34b202-b76c-4e32-bba2-23b970d74f04 --format=cyclonedx1.5+json --all-projects > sbom.json

      - name: Test SBOM with reachability and parse output
        id: snyk-test
        env:
          SNYK_API: https://api.snyk.io
        run: |
          echo "üîç Snyk Open Source analysis..."
          echo ""
          
          # Run Snyk SBOM test and capture output with proper exit code handling
          set +e  # Don't exit on error, we'll handle it manually
          SNYK_OUTPUT=$(snyk sbom test --experimental --org=bb34b202-b76c-4e32-bba2-23b970d74f04 --file=sbom.json --reachability 2>&1)
          EXIT_CODE=$?
          set -e  # Re-enable exit on error
          
          # Display the raw Snyk output first
          echo "üìã SNYK SBOM REACHABILITY ANALYSIS"
          echo "=================================="
          echo ""
          echo "$SNYK_OUTPUT"
          echo ""
          
          # Parse the output for reachable vulnerabilities
          echo "üìä PARSED VULNERABILITY SUMMARY"
          echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
          
          # Count total vulnerabilities from the summary section
          TOTAL_VULNS=$(echo "$SNYK_OUTPUT" | grep -o 'Total security issues: [0-9]\+' | grep -o '[0-9]\+' || echo "0")
          
          # Count reachable vulnerabilities by looking for "Reachability: Reachable" pattern
          REACHABLE_VULNS=$(echo "$SNYK_OUTPUT" | grep -c "Reachability: Reachable" || echo "0")
          
          # Count unreachable vulnerabilities by looking for "No reachable path found" pattern
          UNREACHABLE_VULNS=$(echo "$SNYK_OUTPUT" | grep -c "No reachable path found" || echo "0")
          
          echo "üîç Total vulnerabilities found: $TOTAL_VULNS"
          echo "üéØ Reachable vulnerabilities: $REACHABLE_VULNS"
          echo "üîí Unreachable vulnerabilities: $UNREACHABLE_VULNS"
          echo ""
          
          if [ "$REACHABLE_VULNS" -gt 0 ]; then
            echo "üö® REACHABLE VULNERABILITIES DETAILS"
            echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
            
            # Extract reachable vulnerability details with better context
            echo "$SNYK_OUTPUT" | grep -B 10 -A 2 "Reachability: Reachable" | grep -E "(CRITICAL|HIGH|MEDIUM|LOW|Finding ID)" | head -20
            echo ""
            
            # Count by severity for reachable vulnerabilities - look for severity in the lines before "Reachability: Reachable"
            CRITICAL=$(echo "$SNYK_OUTPUT" | grep -B 10 "Reachability: Reachable" | grep -c "\[CRITICAL\]" || echo "0")
            HIGH=$(echo "$SNYK_OUTPUT" | grep -B 10 "Reachability: Reachable" | grep -c "\[HIGH\]" || echo "0")
            MEDIUM=$(echo "$SNYK_OUTPUT" | grep -B 10 "Reachability: Reachable" | grep -c "\[MEDIUM\]" || echo "0")
            LOW=$(echo "$SNYK_OUTPUT" | grep -B 10 "Reachability: Reachable" | grep -c "\[LOW\]" || echo "0")
            
            echo "üìà REACHABLE VULNERABILITIES BY SEVERITY"
            echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
            echo "üî¥ Critical: $CRITICAL"
            echo "üü† High: $HIGH"
            echo "üü° Medium: $MEDIUM"
            echo "üü¢ Low: $LOW"
            echo ""
          else
            echo "‚úÖ No reachable vulnerabilities found!"
            echo "All detected vulnerabilities are not reachable in your codebase."
            echo ""
          fi
          
          # Create GitHub step summary
          echo "## üîç Snyk Reachability Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìä Vulnerability Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Total vulnerabilities found:** $TOTAL_VULNS" >> $GITHUB_STEP_SUMMARY
          echo "- **Reachable vulnerabilities:** $REACHABLE_VULNS" >> $GITHUB_STEP_SUMMARY
          echo "- **Unreachable vulnerabilities:** $UNREACHABLE_VULNS" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "$REACHABLE_VULNS" -gt 0 ]; then
            echo "### üö® Reachable Vulnerabilities by Severity" >> $GITHUB_STEP_SUMMARY
            echo "- üî¥ **Critical:** $CRITICAL" >> $GITHUB_STEP_SUMMARY
            echo "- üü† **High:** $HIGH" >> $GITHUB_STEP_SUMMARY
            echo "- üü° **Medium:** $MEDIUM" >> $GITHUB_STEP_SUMMARY
            echo "- üü¢ **Low:** $LOW" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            echo "### üìã Raw Snyk Output" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "$SNYK_OUTPUT" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "### ‚úÖ No Reachable Vulnerabilities" >> $GITHUB_STEP_SUMMARY
            echo "All detected vulnerabilities are not reachable in your codebase." >> $GITHUB_STEP_SUMMARY
          fi
          
          # Handle exit codes properly - Snyk exit codes: 0=success, 1=vulnerabilities found, 2=command failed
          if [ "$EXIT_CODE" = "2" ]; then
            echo "‚ùå Snyk command failed to execute (exit code 2). This indicates a command execution error."
            echo "üí° Try re-running the workflow or check the Snyk service status."
            echo "üîß Use -d flag for debug logs if this persists."
            exit 2
          elif [ "$EXIT_CODE" = "1" ]; then
            echo "‚úÖ Snyk completed successfully - vulnerabilities found (exit code 1)"
          elif [ "$EXIT_CODE" = "0" ]; then
            echo "‚úÖ Snyk completed successfully - no vulnerabilities found (exit code 0)"
          else
            echo "‚ö†Ô∏è  Snyk completed with unexpected exit code: $EXIT_CODE"
            exit "$EXIT_CODE"
          fi
# Optional - upload the SBOM results as an artifact
      # - name: Upload SBOM as artifact
      #   uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #     name: snyk-sbom-reachability-results
      #     path: sbom.json
      #     retention-days: 30

